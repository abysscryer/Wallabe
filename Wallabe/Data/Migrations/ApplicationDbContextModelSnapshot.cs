// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wallabe.Data;

namespace Wallabe.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasMaxLength(128);

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Wallabe.Domains.Crane", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime>("OnCreated");

                    b.Property<int>("Status");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("OnCreated")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("Cranes");

                    b.HasData(
                        new { Id = "42ba9d7d-62ba-4958-87a7-1bef9df38674", ImagePath = "42ba9d7d-62ba-4958-87a7-1bef9df38674", Name = "원피스", OnCreated = new DateTime(2019, 8, 22, 12, 0, 0, 0, DateTimeKind.Local), Status = 0 },
                        new { Id = "ce7ea78e-56d6-49db-bb84-4165e3c958e9", ImagePath = "ce7ea78e-56d6-49db-bb84-4165e3c958e9", Name = "포켓몬", OnCreated = new DateTime(2019, 8, 22, 12, 0, 1, 0, DateTimeKind.Local), Status = 0 }
                    );
                });

            modelBuilder.Entity("Wallabe.Domains.CraneRecord", b =>
                {
                    b.Property<string>("Date")
                        .HasColumnType("char(8)");

                    b.Property<string>("CraneId");

                    b.Property<string>("PlayerId");

                    b.Property<int>("Hit");

                    b.Property<int>("Rank");

                    b.Property<float>("Rate");

                    b.Property<int>("Shift");

                    b.Property<int>("Try");

                    b.HasKey("Date", "CraneId", "PlayerId");

                    b.HasIndex("CraneId");

                    b.HasIndex("PlayerId");

                    b.ToTable("CraneRecords");
                });

            modelBuilder.Entity("Wallabe.Domains.Deposit", b =>
                {
                    b.Property<string>("TransactionId");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(38, 18)");

                    b.Property<int>("Type");

                    b.HasKey("TransactionId");

                    b.ToTable("Deposits");
                });

            modelBuilder.Entity("Wallabe.Domains.Doll", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CraneId");

                    b.Property<string>("ImagePath")
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime>("OnCreated");

                    b.Property<int>("Quantity");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("CraneId");

                    b.HasIndex("OnCreated")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("Dolls");

                    b.HasData(
                        new { Id = "61c59cb6-1ba6-4a3a-9d89-e9f0c6504ef6", CraneId = "42ba9d7d-62ba-4958-87a7-1bef9df38674", ImagePath = "61c59cb6-1ba6-4a3a-9d89-e9f0c6504ef6", Name = "루피", OnCreated = new DateTime(2019, 8, 22, 12, 5, 0, 0, DateTimeKind.Local), Quantity = 10 },
                        new { Id = "c69a518d-1dc5-4939-91cb-4dec75c08733", CraneId = "42ba9d7d-62ba-4958-87a7-1bef9df38674", ImagePath = "c69a518d-1dc5-4939-91cb-4dec75c08733", Name = "조로", OnCreated = new DateTime(2019, 8, 22, 12, 10, 0, 0, DateTimeKind.Local), Quantity = 10 },
                        new { Id = "c3e7202c-c7cc-4e18-b8dc-2c4f259e7aa2", CraneId = "ce7ea78e-56d6-49db-bb84-4165e3c958e9", ImagePath = "c3e7202c-c7cc-4e18-b8dc-2c4f259e7aa2", Name = "피카츄", OnCreated = new DateTime(2019, 8, 22, 12, 15, 0, 0, DateTimeKind.Local), Quantity = 10 },
                        new { Id = "e5bdc11d-9194-4e06-a1dc-a33226512692", CraneId = "ce7ea78e-56d6-49db-bb84-4165e3c958e9", ImagePath = "e5bdc11d-9194-4e06-a1dc-a33226512692", Name = "파이리", OnCreated = new DateTime(2019, 8, 22, 12, 20, 0, 0, DateTimeKind.Local), Quantity = 10 }
                    );
                });

            modelBuilder.Entity("Wallabe.Domains.Exchange", b =>
                {
                    b.Property<string>("TransactionId");

                    b.Property<string>("DollId")
                        .IsRequired();

                    b.HasKey("TransactionId");

                    b.HasIndex("DollId");

                    b.ToTable("Exchanges");
                });

            modelBuilder.Entity("Wallabe.Domains.Game", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CraneId");

                    b.Property<DateTime>("OnCreated");

                    b.Property<DateTime>("OnUpdated");

                    b.Property<string>("OrderId");

                    b.Property<string>("PlayerId");

                    b.Property<int>("State");

                    b.Property<int>("Status");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("CraneId");

                    b.HasIndex("OnCreated")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("OrderId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Games");

                    b.HasData(
                        new { Id = "322173e1-9821-4026-a0c2-cecd97ea3f64", CraneId = "42ba9d7d-62ba-4958-87a7-1bef9df38674", OnCreated = new DateTime(2019, 8, 22, 12, 15, 0, 0, DateTimeKind.Local), OnUpdated = new DateTime(2019, 8, 22, 12, 18, 0, 0, DateTimeKind.Local), OrderId = "b3fb6608-5597-4cbf-8cd1-ba74399ee308", PlayerId = "c09c1133-242d-43f8-9ce6-afac824b88c0", State = 1, Status = 3 },
                        new { Id = "cf04144b-846b-450c-8d5e-35c11a64acd3", CraneId = "ce7ea78e-56d6-49db-bb84-4165e3c958e9", OnCreated = new DateTime(2019, 8, 22, 12, 20, 0, 0, DateTimeKind.Local), OnUpdated = new DateTime(2019, 8, 22, 12, 23, 0, 0, DateTimeKind.Local), OrderId = "b3592c2e-6e78-4ebe-a494-ae00e5dbaeeb", PlayerId = "c09c1133-242d-43f8-9ce6-afac824b88c0", State = 2, Status = 3 },
                        new { Id = "91763ee1-382c-43b6-bcff-0c7146400544", CraneId = "42ba9d7d-62ba-4958-87a7-1bef9df38674", OnCreated = new DateTime(2019, 8, 22, 12, 25, 0, 0, DateTimeKind.Local), OnUpdated = new DateTime(2019, 8, 22, 12, 28, 0, 0, DateTimeKind.Local), OrderId = "516dab55-308c-4741-af35-7733c316dbd2", PlayerId = "8558b62a-7e15-4083-b6d7-cd199839fd31", State = 2, Status = 3 },
                        new { Id = "16259d75-2244-4bcc-b0e7-73a20d5d2243", CraneId = "ce7ea78e-56d6-49db-bb84-4165e3c958e9", OnCreated = new DateTime(2019, 8, 22, 12, 30, 0, 0, DateTimeKind.Local), OnUpdated = new DateTime(2019, 8, 22, 12, 33, 0, 0, DateTimeKind.Local), OrderId = "58b773a5-2bb7-4106-a510-d4ab8ac0bbad", PlayerId = "8558b62a-7e15-4083-b6d7-cd199839fd31", State = 1, Status = 3 }
                    );
                });

            modelBuilder.Entity("Wallabe.Domains.Order", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("OnCreated");

                    b.Property<string>("PlayerId")
                        .IsRequired();

                    b.Property<string>("ProductId")
                        .IsRequired();

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("OnCreated")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("PlayerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Orders");

                    b.HasData(
                        new { Id = "b3fb6608-5597-4cbf-8cd1-ba74399ee308", OnCreated = new DateTime(2019, 8, 22, 12, 15, 0, 0, DateTimeKind.Local), PlayerId = "c09c1133-242d-43f8-9ce6-afac824b88c0", ProductId = "b9fe5e69-cc69-4354-b0ff-557c54392a21" },
                        new { Id = "b3592c2e-6e78-4ebe-a494-ae00e5dbaeeb", OnCreated = new DateTime(2019, 8, 22, 12, 20, 0, 0, DateTimeKind.Local), PlayerId = "c09c1133-242d-43f8-9ce6-afac824b88c0", ProductId = "d57567b0-cb03-4410-a517-383ca9880904" },
                        new { Id = "516dab55-308c-4741-af35-7733c316dbd2", OnCreated = new DateTime(2019, 8, 22, 12, 25, 0, 0, DateTimeKind.Local), PlayerId = "8558b62a-7e15-4083-b6d7-cd199839fd31", ProductId = "b9fe5e69-cc69-4354-b0ff-557c54392a21" },
                        new { Id = "58b773a5-2bb7-4106-a510-d4ab8ac0bbad", OnCreated = new DateTime(2019, 8, 22, 12, 30, 0, 0, DateTimeKind.Local), PlayerId = "8558b62a-7e15-4083-b6d7-cd199839fd31", ProductId = "d57567b0-cb03-4410-a517-383ca9880904" }
                    );
                });

            modelBuilder.Entity("Wallabe.Domains.Payment", b =>
                {
                    b.Property<string>("TransactionId");

                    b.Property<string>("OrderId")
                        .IsRequired();

                    b.HasKey("TransactionId");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Wallabe.Domains.Play", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("GameId")
                        .IsRequired();

                    b.Property<DateTime>("OnCreated");

                    b.Property<int>("State");

                    b.Property<int>("Status");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("GameId");

                    b.HasIndex("OnCreated")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("Plays");

                    b.HasData(
                        new { Id = "aa7e7fa8-07df-4368-85b1-74f0dfde0ac0", GameId = "322173e1-9821-4026-a0c2-cecd97ea3f64", OnCreated = new DateTime(2019, 8, 22, 12, 31, 0, 0, DateTimeKind.Local), State = 0, Status = 0 },
                        new { Id = "e835a48a-f0e9-4a83-96ae-886d7cb6fb48", GameId = "322173e1-9821-4026-a0c2-cecd97ea3f64", OnCreated = new DateTime(2019, 8, 22, 12, 32, 0, 0, DateTimeKind.Local), State = 0, Status = 1 },
                        new { Id = "a6086df8-6f77-4b66-8568-a7e2ce0aec14", GameId = "322173e1-9821-4026-a0c2-cecd97ea3f64", OnCreated = new DateTime(2019, 8, 22, 12, 33, 0, 0, DateTimeKind.Local), State = 0, Status = 2 },
                        new { Id = "119355fd-dc13-45fe-a5bb-122f727c58b3", GameId = "322173e1-9821-4026-a0c2-cecd97ea3f64", OnCreated = new DateTime(2019, 8, 22, 12, 34, 0, 0, DateTimeKind.Local), State = 1, Status = 3 },
                        new { Id = "f8449d35-6217-4c27-8eef-9dabda971081", GameId = "cf04144b-846b-450c-8d5e-35c11a64acd3", OnCreated = new DateTime(2019, 8, 22, 12, 35, 0, 0, DateTimeKind.Local), State = 0, Status = 0 },
                        new { Id = "56305dd8-5421-4a7e-82f6-714963768f94", GameId = "cf04144b-846b-450c-8d5e-35c11a64acd3", OnCreated = new DateTime(2019, 8, 22, 12, 36, 0, 0, DateTimeKind.Local), State = 0, Status = 1 },
                        new { Id = "93e46c07-3261-466c-91de-4423166d9227", GameId = "cf04144b-846b-450c-8d5e-35c11a64acd3", OnCreated = new DateTime(2019, 8, 22, 12, 37, 0, 0, DateTimeKind.Local), State = 0, Status = 2 },
                        new { Id = "2fc59b99-891d-4aa3-ada5-132414094e0d", GameId = "cf04144b-846b-450c-8d5e-35c11a64acd3", OnCreated = new DateTime(2019, 8, 22, 12, 38, 0, 0, DateTimeKind.Local), State = 2, Status = 3 },
                        new { Id = "0a4cc44f-d7e9-41df-9ae7-f2930afb3134", GameId = "91763ee1-382c-43b6-bcff-0c7146400544", OnCreated = new DateTime(2019, 8, 22, 12, 39, 0, 0, DateTimeKind.Local), State = 0, Status = 0 },
                        new { Id = "b763531b-fb5e-4e87-9c78-c7b8f4fcad7e", GameId = "91763ee1-382c-43b6-bcff-0c7146400544", OnCreated = new DateTime(2019, 8, 22, 12, 40, 0, 0, DateTimeKind.Local), State = 0, Status = 1 },
                        new { Id = "01f4bdbf-bebe-4d64-ba4d-b52bba2e9768", GameId = "91763ee1-382c-43b6-bcff-0c7146400544", OnCreated = new DateTime(2019, 8, 22, 12, 41, 0, 0, DateTimeKind.Local), State = 0, Status = 2 },
                        new { Id = "2b187756-fadb-4b2a-85d3-30c5219c78a5", GameId = "91763ee1-382c-43b6-bcff-0c7146400544", OnCreated = new DateTime(2019, 8, 22, 12, 42, 0, 0, DateTimeKind.Local), State = 2, Status = 3 },
                        new { Id = "c6d31ffa-8e26-41d9-8347-3322c1c4ca27", GameId = "16259d75-2244-4bcc-b0e7-73a20d5d2243", OnCreated = new DateTime(2019, 8, 22, 12, 43, 0, 0, DateTimeKind.Local), State = 0, Status = 0 },
                        new { Id = "e93c2269-1a48-4913-99c3-6d666f495b19", GameId = "16259d75-2244-4bcc-b0e7-73a20d5d2243", OnCreated = new DateTime(2019, 8, 22, 12, 44, 0, 0, DateTimeKind.Local), State = 0, Status = 1 },
                        new { Id = "1f1e4209-d122-473d-adbf-ef4b70dc233a", GameId = "16259d75-2244-4bcc-b0e7-73a20d5d2243", OnCreated = new DateTime(2019, 8, 22, 12, 45, 0, 0, DateTimeKind.Local), State = 0, Status = 2 },
                        new { Id = "d9b0e57a-40af-420f-8989-ebed4b8b8ec1", GameId = "16259d75-2244-4bcc-b0e7-73a20d5d2243", OnCreated = new DateTime(2019, 8, 22, 12, 46, 0, 0, DateTimeKind.Local), State = 1, Status = 3 }
                    );
                });

            modelBuilder.Entity("Wallabe.Domains.Player", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Cash")
                        .HasColumnType("decimal(38, 18)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime>("OnCreated");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("Players");

                    b.HasData(
                        new { Id = "c09c1133-242d-43f8-9ce6-afac824b88c0", Cash = 100000000m, ImagePath = "748960dc-70cd-4d9d-a470-3f9445d89183", Name = "이니", OnCreated = new DateTime(2019, 8, 22, 12, 0, 0, 0, DateTimeKind.Local) },
                        new { Id = "8558b62a-7e15-4083-b6d7-cd199839fd31", Cash = 100000000m, ImagePath = "248528e4-f59e-445e-9899-6c8d465c5479", Name = "혀니", OnCreated = new DateTime(2019, 8, 22, 12, 1, 0, 0, DateTimeKind.Local) }
                    );
                });

            modelBuilder.Entity("Wallabe.Domains.Product", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CraneId")
                        .IsRequired();

                    b.Property<string>("Name");

                    b.Property<DateTime>("OnCreated");

                    b.Property<int>("Price");

                    b.Property<int>("Quantity");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("CraneId");

                    b.HasIndex("OnCreated")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("Products");

                    b.HasData(
                        new { Id = "b9fe5e69-cc69-4354-b0ff-557c54392a21", CraneId = "42ba9d7d-62ba-4958-87a7-1bef9df38674", Name = "원피스 X1", OnCreated = new DateTime(2019, 8, 22, 12, 1, 0, 0, DateTimeKind.Local), Price = 1000, Quantity = 1 },
                        new { Id = "d25830d7-1523-487e-86ea-bdb9ce224d59", CraneId = "42ba9d7d-62ba-4958-87a7-1bef9df38674", Name = "원피스 x2", OnCreated = new DateTime(2019, 8, 22, 12, 1, 0, 0, DateTimeKind.Local), Price = 2000, Quantity = 2 },
                        new { Id = "d17babcb-ab39-4fd9-9f2e-8ae4529e92a0", CraneId = "42ba9d7d-62ba-4958-87a7-1bef9df38674", Name = "원피스 x3", OnCreated = new DateTime(2019, 8, 22, 12, 3, 0, 0, DateTimeKind.Local), Price = 3000, Quantity = 3 },
                        new { Id = "b59a1e20-f31e-4d0f-a72e-489013ce7170", CraneId = "42ba9d7d-62ba-4958-87a7-1bef9df38674", Name = "원피스 x4", OnCreated = new DateTime(2019, 8, 22, 12, 4, 0, 0, DateTimeKind.Local), Price = 4000, Quantity = 4 },
                        new { Id = "efdf197e-cd23-4b44-9cbe-caac4809309d", CraneId = "42ba9d7d-62ba-4958-87a7-1bef9df38674", Name = "원피스 x5", OnCreated = new DateTime(2019, 8, 22, 12, 5, 0, 0, DateTimeKind.Local), Price = 5000, Quantity = 5 },
                        new { Id = "d57567b0-cb03-4410-a517-383ca9880904", CraneId = "ce7ea78e-56d6-49db-bb84-4165e3c958e9", Name = "피카츄 x1", OnCreated = new DateTime(2019, 8, 22, 12, 6, 0, 0, DateTimeKind.Local), Price = 1000, Quantity = 1 },
                        new { Id = "46aeb3db-80ab-437d-9b34-4e553633461e", CraneId = "ce7ea78e-56d6-49db-bb84-4165e3c958e9", Name = "피카츄 x2", OnCreated = new DateTime(2019, 8, 22, 12, 7, 0, 0, DateTimeKind.Local), Price = 2000, Quantity = 2 },
                        new { Id = "c7c8de70-b9c1-4df0-8520-340c16e1f585", CraneId = "ce7ea78e-56d6-49db-bb84-4165e3c958e9", Name = "피카츄 x3", OnCreated = new DateTime(2019, 8, 22, 12, 8, 0, 0, DateTimeKind.Local), Price = 3000, Quantity = 3 },
                        new { Id = "f1afa3d7-4df8-4766-92be-e522110f7dae", CraneId = "ce7ea78e-56d6-49db-bb84-4165e3c958e9", Name = "피카츄 x4", OnCreated = new DateTime(2019, 8, 22, 12, 9, 0, 0, DateTimeKind.Local), Price = 4000, Quantity = 4 },
                        new { Id = "7da6f8d6-eb6a-4466-8b1b-cb7d470d88b8", CraneId = "ce7ea78e-56d6-49db-bb84-4165e3c958e9", Name = "피카츄 x5", OnCreated = new DateTime(2019, 8, 22, 12, 10, 0, 0, DateTimeKind.Local), Price = 5000, Quantity = 5 }
                    );
                });

            modelBuilder.Entity("Wallabe.Domains.Record", b =>
                {
                    b.Property<string>("Date")
                        .HasColumnType("char(8)");

                    b.Property<string>("PlayerId");

                    b.Property<int>("Hit");

                    b.Property<int>("Rank");

                    b.Property<float>("Rate");

                    b.Property<int>("Shift");

                    b.Property<int>("Try");

                    b.HasKey("Date", "PlayerId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("Wallabe.Domains.Transaction", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("AfterAmount")
                        .HasColumnType("decimal(38, 18)");

                    b.Property<decimal>("ApplyAmount")
                        .HasColumnType("decimal(38, 18)");

                    b.Property<decimal>("BeforeAmount")
                        .HasColumnType("decimal(38, 18)");

                    b.Property<DateTime>("OnCreated");

                    b.Property<string>("PlayerId");

                    b.Property<int>("Type");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("OnCreated")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Wallabe.Domains.Withdraw", b =>
                {
                    b.Property<string>("TransactionId");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(38, 18)");

                    b.Property<DateTime>("OnUpdated");

                    b.Property<int>("State");

                    b.Property<int>("Status");

                    b.Property<int>("Type");

                    b.HasKey("TransactionId");

                    b.ToTable("Withdraws");
                });

            modelBuilder.Entity("Wallabe.Domains.WithdrawLog", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("OnCreated");

                    b.Property<int>("State");

                    b.Property<int>("Status");

                    b.Property<string>("WithdrawId");

                    b.HasKey("Id");

                    b.HasIndex("WithdrawId");

                    b.ToTable("WithdrawLog");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Wallabe.Domains.CraneRecord", b =>
                {
                    b.HasOne("Wallabe.Domains.Crane", "Crane")
                        .WithMany("CraneRecords")
                        .HasForeignKey("CraneId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Wallabe.Domains.Player", "Player")
                        .WithMany("CraneRecords")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Wallabe.Domains.Deposit", b =>
                {
                    b.HasOne("Wallabe.Domains.Transaction", "Transaction")
                        .WithOne("Deposit")
                        .HasForeignKey("Wallabe.Domains.Deposit", "TransactionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Wallabe.Domains.Doll", b =>
                {
                    b.HasOne("Wallabe.Domains.Crane", "Crane")
                        .WithMany("Dolls")
                        .HasForeignKey("CraneId");
                });

            modelBuilder.Entity("Wallabe.Domains.Exchange", b =>
                {
                    b.HasOne("Wallabe.Domains.Doll", "Doll")
                        .WithMany("Exchanges")
                        .HasForeignKey("DollId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Wallabe.Domains.Transaction", "Transaction")
                        .WithOne("Exchange")
                        .HasForeignKey("Wallabe.Domains.Exchange", "TransactionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Wallabe.Domains.Game", b =>
                {
                    b.HasOne("Wallabe.Domains.Crane", "Crane")
                        .WithMany("Games")
                        .HasForeignKey("CraneId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Wallabe.Domains.Order", "Order")
                        .WithMany("Games")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Wallabe.Domains.Player", "Player")
                        .WithMany("Games")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Wallabe.Domains.Order", b =>
                {
                    b.HasOne("Wallabe.Domains.Player", "Player")
                        .WithMany("Orders")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Wallabe.Domains.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Wallabe.Domains.Payment", b =>
                {
                    b.HasOne("Wallabe.Domains.Order", "Order")
                        .WithOne("Payment")
                        .HasForeignKey("Wallabe.Domains.Payment", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Wallabe.Domains.Transaction", "Transaction")
                        .WithOne("Payment")
                        .HasForeignKey("Wallabe.Domains.Payment", "TransactionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Wallabe.Domains.Play", b =>
                {
                    b.HasOne("Wallabe.Domains.Game", "Game")
                        .WithMany("Plays")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Wallabe.Domains.Product", b =>
                {
                    b.HasOne("Wallabe.Domains.Crane", "Crane")
                        .WithMany("Products")
                        .HasForeignKey("CraneId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Wallabe.Domains.Record", b =>
                {
                    b.HasOne("Wallabe.Domains.Player", "Player")
                        .WithMany("Records")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Wallabe.Domains.Withdraw", b =>
                {
                    b.HasOne("Wallabe.Domains.Transaction", "Transaction")
                        .WithOne("Withdraw")
                        .HasForeignKey("Wallabe.Domains.Withdraw", "TransactionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Wallabe.Domains.WithdrawLog", b =>
                {
                    b.HasOne("Wallabe.Domains.Withdraw", "Withdraw")
                        .WithMany("WithdrawLogs")
                        .HasForeignKey("WithdrawId");
                });
#pragma warning restore 612, 618
        }
    }
}
